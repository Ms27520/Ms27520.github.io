<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>诗</title>
      <link href="/posts/6abc/"/>
      <url>/posts/6abc/</url>
      
        <content type="html"><![CDATA[<div class="tabs" id="xiandaishi"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#xiandaishi-1">现代诗</button></li><li class="tab"><button type="button" data-href="#xiandaishi-2">古诗</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="xiandaishi-1"><hr><!-- <center> --><h3 id="老马">老马</h3><p><mark class="hl-label default">臧克家</mark></p><p>总得叫大车装个够，<br>它横竖不说一句话，<br>背上的压力往肉里扣，<br>它把头沉重地垂下！<br>这刻不知道下刻的命，<br>它有泪只往心里咽，<br>眼里飘来一道鞭影，<br>它抬起头望望前面。</p><!-- </center> --><p>     一九三二年四月</p><hr><!-- <center> --><h3 id="面朝大海，春暖花开">面朝大海，春暖花开</h3><p><mark class="hl-label default">海子</mark></p><p>从明天起，做一个幸福的人<br>喂马，劈柴，周游世界<br>从明天起，关心粮食和蔬菜<br>我有一所房子，面朝大海，春暖花开</p><p>从明天起，和每一个亲人通信<br>告诉他们我的幸福<br>那幸福的闪电告诉我的<br>我将告诉每一个人</p><p>给每一条河每一座山取一个温暖的名字<br>陌生人，我也为你祝福<br>愿你有一个灿烂的前程<br>愿你有情人终成眷属<br>愿你在尘世获得幸福<br>我只愿面朝大海，春暖花开</p><!-- </center> --><hr><!-- <center> --><h3 id="有的人">有的人</h3><p><mark class="hl-label default">臧克家</mark></p><p>   ----纪念鲁迅逝世十三周年有感</p><p>有的人活着<br>他已经死了；<br>有的人死了<br>他还活着。</p><p>有的人<br>骑在人民头上：“啊，我多伟大！”<br>有的人<br>俯下身子给人民当牛马。</p><p>有的人<br>把名字刻入石头，想“不朽”；<br>有的人<br>情愿作野草，等着地下的火烧。</p><p>有的人<br>他活着别人就不能活；<br>有的人<br>他活着为了多数人更好地活。</p><p>骑在人民头上的<br>人民把他摔垮；<br>给人民作牛马的<br>人民永远记住他！</p><p>把名字刻入石头的<br>名字比尸首烂得更早；<br>只要春风吹到的地方<br>到处是青青的野草。</p><p>他活着别人就不能活的人，<br>他的下场可以看到；<br>他活着为了多数人更好地活着的人，<br>群众把他抬举得很高，很高。</p><!-- </center> --><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="xiandaishi-2"><hr><center><h3 id="临江仙·夜饮东坡醒复醉">临江仙·夜饮东坡醒复醉</h3><p><mark class="hl-label default">宋·苏轼</mark></p><p>夜饮东坡醒复醉，归来仿佛三更。家童鼻息已雷鸣。敲门都不应，倚杖听江声。<br>长恨此身非我有，何时忘却营营？夜阑风静縠纹平。小舟从此逝，江海寄余生。</p></center><hr><center><h3 id="浣溪沙·谁念西风独自凉">浣溪沙·谁念西风独自凉</h3><p><mark class="hl-label default">清·纳兰性德</mark></p><p>谁念西风独自凉，萧萧黄叶闭疏窗，沉思往事立残阳。<br>被酒莫惊春重睡，赌书消得泼茶香，当时只道是寻常。</p></center><hr><center><h3 id="鹊桥仙·纤云弄巧">鹊桥仙·纤云弄巧</h3><p><mark class="hl-label default">北宋·秦观</mark></p><p>纤云弄巧，飞星传恨，银汉迢迢暗度。金风玉露一相逢，便胜却人间无数。<br>柔情似水，佳期如梦，忍顾鹊桥归路。两情若是久长时，又岂在朝朝暮暮。</p></center><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> 诗 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 现代诗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/3eeb/"/>
      <url>/posts/3eeb/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><pre class="language-bash" data-language="bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Docker-compose部署JoplinServer</title>
      <link href="/posts/50aa/"/>
      <url>/posts/50aa/</url>
      
        <content type="html"><![CDATA[<h2 id="准备：Linux服务器、本地电脑（或手机？）、域名、人">准备：Linux服务器、本地电脑（或手机？）、域名、人</h2><blockquote><p>确保已经备份好所有笔记，本文中使用的是Ubuntu20.04系统的服务器</p></blockquote><hr><h3 id="1-更新系统">1. 更新系统</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt</span> upgrade</code></pre><h3 id="2-安装并启动Docker">2. 安装并启动Docker</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token parameter variable">-sSL</span> https://get.docker.com/ <span class="token operator">|</span> <span class="token function">sh</span>systemctl <span class="token builtin class-name">enable</span> <span class="token function">docker</span> <span class="token operator">&amp;&amp;</span> systemctl start <span class="token function">docker</span></code></pre><h3 id="3-安装Docker-compose">3. 安装Docker-compose</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> <span class="token function">docker-compose</span></code></pre><h3 id="4-创建Joplin工作目录并进入">4. 创建Joplin工作目录并进入</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">mkdir</span> Joplin <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> Joplin</code></pre><h3 id="5-创建docker-compose-yml文件，并粘贴配置内容">5. 创建<code>docker-compose.yml</code>文件，并粘贴配置内容</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> docker-compose.yml  <span class="token comment">#或者使用其他你喜欢的编辑器</span></code></pre><pre class="language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>    <span class="token key atrule">db</span><span class="token punctuation">:</span>        <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres<span class="token punctuation">:</span><span class="token number">13.1</span>        <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token string">"5432:5432"</span>        <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped        <span class="token key atrule">environment</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> APP_PORT=22300            <span class="token punctuation">-</span> POSTGRES_PASSWORD=密码            <span class="token punctuation">-</span> POSTGRES_USER=joplin            <span class="token punctuation">-</span> POSTGRES_DB=joplin    <span class="token key atrule">app</span><span class="token punctuation">:</span>        <span class="token key atrule">image</span><span class="token punctuation">:</span> joplin/server<span class="token punctuation">:</span>latest        <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> db        <span class="token key atrule">ports</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> <span class="token string">"22300:22300"</span>        <span class="token key atrule">restart</span><span class="token punctuation">:</span> unless<span class="token punctuation">-</span>stopped        <span class="token key atrule">environment</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> APP_BASE_URL=https<span class="token punctuation">:</span>//你的域名/            <span class="token punctuation">-</span> DB_CLIENT=pg            <span class="token punctuation">-</span> POSTGRES_PASSWORD=密码            <span class="token punctuation">-</span> POSTGRES_DATABASE=joplin            <span class="token punctuation">-</span> POSTGRES_USER=joplin            <span class="token punctuation">-</span> POSTGRES_PORT=5432            <span class="token punctuation">-</span> POSTGRES_HOST=db</code></pre><ul><li>注意把<code>你的域名</code>更换为你要用的域名，后续在Joplin配置中也需要填入此域名，<code>密码</code>也需要改成你喜欢的</li></ul><h3 id="6-开始部署">6. 开始部署</h3><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker-compose</span> up <span class="token parameter variable">-d</span></code></pre><ul><li>-d 表示后台运行</li></ul><h3 id="7-域名配置好解析">7. 域名配置好解析</h3><h3 id="8-nginx反向代理实现https">8. nginx反向代理实现https</h3><p>(1). 安装并启动nginx</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> nginxsystemctl <span class="token builtin class-name">enable</span> nginx <span class="token operator">&amp;&amp;</span> systemctl start nginx</code></pre><p>(2). 编辑nginx配置</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/nginx/conf.d/joplin.conf</code></pre><pre class="language-conf" data-language="conf"><code class="language-conf">server {    server_name  你的域名;    listen 80;    #return 301 https://$server_name$request_uri;    location / {        proxy_pass http://127.0.0.1:22300;        proxy_set_header  Host                $http_host;        proxy_set_header  X-Real-IP           $remote_addr;        proxy_set_header  X-Forwarded-Ssl     on;        proxy_set_header  X-Forwarded-For     $proxy_add_x_forwarded_for;        proxy_set_header  X-Forwarded-Proto   $scheme;        proxy_set_header  X-Frame-Options     SAMEORIGIN;        client_max_body_size        100m;        client_body_buffer_size     128k;        proxy_buffer_size           4k;        proxy_buffers               4 32k;        proxy_busy_buffers_size     64k;        proxy_temp_file_write_size  64k;    }}</code></pre><p>(3). 安装 certbot 配置https</p><pre class="language-bash" data-language="bash"><code class="language-bash"><span class="token function">apt</span> <span class="token function">install</span> python-certbot-nginx</code></pre><p>(4). 使用 certbot</p><pre class="language-bash" data-language="bash"><code class="language-bash">certbot</code></pre><p>(5). 跟着提示走（不详说了，报错说明你nginx配置有问题请<code>nginx -t</code>）</p><p>(6). 然后选<code>redirect</code>（配置自动重定向https）</p><p>(7). 然后<code>nginx -s reload</code></p><h3 id="9-使用宝塔配置反向代理实现https（与7二选一）">9. 使用宝塔配置反向代理实现https（与7二选一）</h3><p>(1). 安装宝塔并安装相关环境(nginx)</p><blockquote><p>在"软件商店"安装nginx，或安装宝塔后在弹窗处一键安装</p></blockquote><p><img src="https://img.ms27520.com/l/1/fc82c376bf7929de67a326ccdff1d7d2.png" alt="fc82c376bf7929de67a326ccdff1d7d2.png"></p><p>(2). 添加站点</p><blockquote><p>在"网站"中添加站点，填入自己已经配置好DNS解析的域名，PHP版本选择纯静态，其他默认就好</p></blockquote><p><img src="https://img.ms27520.com/l/1/81af94ca85680cf9b70a4c4cae44af4f.png" alt="81af94ca85680cf9b70a4c4cae44af4f.png"></p><p>(3). 设置反向代理</p><blockquote><p>打开新建的站点的"设置"，按步骤配置，填入要反代的地址，若JoplinServer在本机，在"目标URL"可填入<code>http://localhost:22300</code>或<code>http://127.0.0.1:22300</code>，若为其他服务器反代，填入<code>http://服务器IP:22300</code>保存即可。</p></blockquote><p><img src="https://img.ms27520.com/l/1/0b8cdaf4a62ca0f9f9b9b55826d56d7e.png" alt="0b8cdaf4a62ca0f9f9b9b55826d56d7e.png"></p><p>(4). 申请SSL证书</p><blockquote><p>在站点设置中选择"SSL"，本文使用"Let’s Encrypt"申请，选择"验证方式"和"域名"即可。</p></blockquote><p><img src="https://img.ms27520.com/l/1/550e54b49a741cf90278ea749fd9407a.png" alt="550e54b49a741cf90278ea749fd9407a.png"></p><h3 id="10-访问域名">10. 访问域名</h3><ul><li>JoplinServer默认账号<code>admin@localhost</code>，默认密码<code>admin</code></li></ul><p><img src="https://img.ms27520.com/l/1/199245948fa412a00bb40eacb64d4a45.png" alt="199245948fa412a00bb40eacb64d4a45.png"></p><blockquote><p>更改账户名和密码</p></blockquote><p><img src="https://img.ms27520.com/l/1/4ccca67f24f1321c79b2259446dc96c6.png" alt="4ccca67f24f1321c79b2259446dc96c6.png"></p><blockquote><p>还可在<code>Admin</code>中的<code>User</code>添加其他用户</p></blockquote><h3 id="11-在Joplin中配置">11. 在Joplin中配置</h3><blockquote><p>打开Joplin的选项</p></blockquote><p><img src="https://img.ms27520.com/l/1/e7e504f0670e1d8be998d8f228b69be0.png" alt="e7e504f0670e1d8be998d8f228b69be0.png"></p><h2 id="参考">参考</h2><p><a href="https://github.com/laurent22/joplin/blob/dev/packages/server/README.md">官方部署文档</a></p><p><a href="https://www.cx03.space/2021/02/12/docker-%E9%83%A8%E7%BD%B2-joplin-server/">复读机的记事本</a></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Joplin </tag>
            
            <tag> JoplinServer </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
